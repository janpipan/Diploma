apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: haproxy-daemonset
  namespace: kube-system
  label:
    app: haproxy
spec:
  selector:
    matchLabels:
      app: haproxy
  template:
    metadata:
      name: haproxy
      namespace: kube-system
    spec:
      containers:
      - image: haproxy:2.1.4
        name: haproxy
        livenessProbe:
          failureThreshold: 8
          httpGet:
            host: localhost
            path: /healthz
            port: 6443
            scheme: HTTPS
        volumeMounts:
        - mountPath: /usr/local/etc/haproxy/haproxy.cfg
          name: haproxyconf
          readOnly: true
      hostNetwork: true
      volumes:
      - configMap:
          items:
          - key: haproxy
            path: haproxy
        name: haproxyconf
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "node-role.kubernetes.io/control-plane"
                operator: In
                values: 
                - ""
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: keepalived-daemonset
  namespace: kube-system
  label:
    app: keepalived
spec:
  selector:
    matchLabels:
      app: keepalived
  template:
    metadata:
      name: haproxy
      namespace: kube-system
    spec:
      containers:
      - image: osixia/keepalived:2.0.17
        name: keepalived
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_BROADCAST
            - NET_RAW
        volumeMounts:
        - mountPath: /usr/local/etc/keepalived/keepalived.conf
          name: config
        - mountPath: /etc/keepalived/check_apiserver.sh
          name: check
      hostNetwork: true
      volumes:
      - configMap:
          items:
          - key: keepalived
            path: keepalived
        name: config
      - configMap:
          items:
          - key: check-api-server
            path: check-api-server
        name: check
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "node-role.kubernetes.io/control-plane"
                operator: In
                values: 
                - ""
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"


        